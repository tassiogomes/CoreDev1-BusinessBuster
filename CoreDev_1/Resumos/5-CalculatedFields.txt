Calculated Fields or Special Fields in BC
________________________________________________________________________________________________________________

        • FlowFields exibem o resultado de um cálculo descrito na propriedade CalcFormula.
            - Exemplo: O campo Account Balance na tabela General Ledger Account mostra o saldo da conta, calculado como a soma dos campos NetAmount para todas as entradas no General Journal.

        • Aumentam o desempenho ao calcular resultados como o saldo dos clientes.
            - Otimização adicional é possível ativando ou desativando SIFT (SumIndexField Technology).

        • FlowFields não são campos físicos armazenados no banco de dados.
            - São descrições de cálculos e locais para exibição dos resultados.
            - Valores em FlowFields são inicializados automaticamente para 0 (zero).
            - Para atualizar um FlowField, use o método CalcFields (Record).
            - Se um FlowField for a expressão fonte direta de um controle em uma página, ele é calculado automaticamente quando a página é exibida.


Tipos de Calculated Fields
________________________________________________________________________________________________________________


        • Existem sete tipos de FlowFields:
            - Sum: Decimal, Integer, BigInteger, ou Duration. Soma de um conjunto específico em uma coluna de uma tabela.
            - Average: Decimal, Integer, BigInteger, ou Duration. Valor médio de um conjunto específico em uma coluna de uma tabela.
            - Exist: Boolean. Indica se algum registro existe em um conjunto específico em uma tabela.
            - Count: Integer. Número de registros em um conjunto específico em uma tabela.
            - Min: Qualquer tipo. Valor mínimo em uma coluna em um conjunto específico em uma tabela.
            - Max: Qualquer tipo. Valor máximo em uma coluna em um conjunto específico em uma tabela.
            - Lookup: Qualquer tipo. Pesquisa um valor em uma coluna em outra tabela.


        

Propriedades
________________________________________________________________________________________________________________

	• FieldClass
        	A FieldClass define a finalidade e o comportamento de um campo em uma tabela. Existem várias classes de campos que podem ser definidas:

            - Normal: O campo é um campo normal armazenado no banco de dados.
            - FlowField: O campo é um FlowField, que é calculado em tempo de execução com base em uma fórmula.
            - FlowFilter: O campo é um FlowFilter, usado para definir filtros que afetam os FlowFields.
            - Blob: O campo armazena dados binários grandes (Binary Large Object).






Notas
________________________________________________________________________________________________________________


	• Editable = false - recomendável deixar a false os flowfields
	• Quando se cria um flowfiel numa lista linkada a outra tabela, é necessário mudar a ListPage e a Table, pra isso, modifica os dois objetos
	pra isso, se cria a Page Extension e a List Extension









Field Calculation Methods
________________________________________________________________________________________________________________

        • Métodos de Cálculo de Campo:

            - CalcFields: Calcula FlowFields em um registro. FlowFields são atualizados automaticamente quando são expressões diretas de controles, mas precisam ser explicitamente calculados quando fazem parte de uma expressão mais complexa.
                Sintaxe:
                [Ok :=] Record.CalcFields(Campo1, [Campo2],...);

            - CalcSums: Calcula a soma de um ou mais campos que são SumIndexFields no registro.
                Sintaxe:
                [Ok :=] Record.CalcSums(Campo1, [Campo2],...);

            - FieldError: Dispara um erro em tempo de execução após exibir uma mensagem de erro relacionada ao campo.
                Sintaxe:
                Record.FieldError(Campo, [Texto]);

            - FieldName: Retorna o nome de um campo.
                Sintaxe:
                Nome := Record.FieldName(Campo);

            - Init: Inicializa um registro.
                Sintaxe:
                Record.Init();

            - TestField: Testa se um campo contém um valor específico.
                Sintaxe:
                Record.TestField(Campo, [Valor]);

            - Validate: Chama o gatilho OnValidate de um campo.
                Sintaxe:
                Record.Validate(Campo [, NovoValor]);